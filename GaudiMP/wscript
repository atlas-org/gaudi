## -*- python -*-
## automatically generated from a hscript
## do NOT edit.

## waf imports
import waflib.Logs as msg

PACKAGE = {
    "name":    "GaudiMP",
    "authors": [],

    "version":  "v1r7",
}

### ---------------------------------------------------------------------------
def pkg_deps(ctx):
    
    ## public dependencies
    ctx.use_pkg("GaudiKernel", version="*", public=True)
    ctx.use_pkg("GaudiAlg", version="*", public=True)
    ctx.use_pkg("GaudiPython", version="*", public=True)
    ctx.use_pkg("LCG_Interfaces/Python", version="*", public=True)
    ctx.use_pkg("LCG_Interfaces/Reflex", version="*", public=True)
    ctx.use_pkg("LCG_Interfaces/ROOT", version="*", public=True)
    
    ## no private dependencies
    ## runtime dependencies
    ctx.use_pkg("LCG_Interfaces/Python", version="*", runtime=True)
    ctx.use_pkg("LCG_Interfaces/Reflex", version="*", runtime=True)
    ctx.use_pkg("LCG_Interfaces/ROOT", version="*", runtime=True)
    return # pkg_deps


### ---------------------------------------------------------------------------
def options(ctx):
    
    return # options


### ---------------------------------------------------------------------------
def configure(ctx):
    
    
    
    #### macro &{{rootmap_name [{default [rootmap]} {ROOT_GE_5_15 [reflex.rootmap]}]}}
    ctx.hwaf_declare_macro("rootmap_name", (
      {"default": "rootmap"},
      {"ROOT_GE_5_15": "reflex.rootmap"},
    ))
    
    return # configure


### ---------------------------------------------------------------------------
def build(ctx):
    
    
    ##### **** statement *hlib.ApplyPatternStmt (&{install_more_includes [more=GaudiMP]})
    ##### **** statement *hlib.ApplyPatternStmt (&{install_python_modules []})
    ##### **** statement *hlib.ApplyPatternStmt (&{install_scripts []})
    ##### **** statement *hlib.ApplyPatternStmt (&{linker_library [library=GaudiMPLib]})
    ##### **** statement *hlib.ApplyPatternStmt (&{component_library [library=GaudiMP]})
    ##### **** statement *hlib.ApplyPatternStmt (&{reflex_dictionary [dictionary=GaudiMP headerfiles=$(GAUDIMPROOT)/dict/gaudimp_dict.h selectionfile=../dict/selection.xml options="--no_templatetypedefs -I$(Python_inc) imports="Python -import=Reflex -import=ROOT]})
    
    ctx(
        features = "tdaq_library",
        name     = "GaudiMP",
        target   = "GaudiMP",
        source   = ["component/*.cpp"],
    )
    
    ctx(
        features = "tdaq_library",
        name     = "GaudiMPLib",
        target   = "GaudiMPLib",
        source   = ["Lib/*.cpp"],
    )
    return # build

## EOF ##
