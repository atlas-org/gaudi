# =============================================================================
package GaudiProfiling
version v1r2

# ============== structure ====================================================
branches        GaudiProfiling src cmt doc data python scripts

# ============== dependencies =================================================
use             GaudiKernel v*
use             GaudiAlg    v* -no_auto_imports
# Replacement for libz
use             ROOT        v* LCG_Interfaces
use             Boost       v* LCG_Interfaces # Boost also used to bind cpp to python
# ============== constituents =================================================
library         GaudiProfiling    component/*.cpp -no_static
application     GaudiGenProfilingHtml app/pfm_gen_analysis.cpp

library         GaudiGoogleProfiling    component/google/*.cpp -import=GaudiAlg -import=tcmalloc -no_static

library         IntelProfiler    component/intel/*.cpp -no_static

# ============== patterns =====================================================
apply_pattern   component_library library="GaudiProfiling"
apply_pattern   component_library library="GaudiGoogleProfiling"
apply_pattern   component_library library="IntelProfiler"
apply_pattern   install_python_modules
apply_pattern   install_scripts

macro_append GaudiProfiling_linkopts " -ldl " target-winxp ""

# ============== private ======================================================
private

# Check if the VTune directory is present and set the tag have-vtune accordingly
# Note: we do not have VTune for i686.
macro have_vtune "not-have-vtune" target-x86_64&target-linux `$(GaudiProfiling_root)/cmt/check_vtune`
apply_tag $(have_vtune)
# Keep the IntelProfiler targets only if we do have VTune.
macro_remove constituents "IntelProfilerConfDbMerge" have-vtune ""
macro_remove constituents "IntelProfilerConf"        have-vtune ""
macro_remove constituents "IntelProfilerMergeMap"    have-vtune ""
macro_remove constituents "IntelProfilerRootMap"     have-vtune ""
macro_remove constituents "IntelProfiler"            have-vtune ""
macro_remove GaudiProfiling_python_init_dependencies "IntelProfilerConf" \
                                                     have-vtune ""
macro_remove zip_GaudiProfiling_python_modules_dependencies "IntelProfilerConfDbMerge" \
                                                     have-vtune ""

macro_append use_includes " -I/afs/cern.ch/sw/IntelSoftware/linux/x86_64/xe2011/vtune_amplifier_xe_2011/include "
macro_append IntelProfiler_use_linkopts " -pthread /afs/cern.ch/sw/IntelSoftware/linux/x86_64/xe2011/vtune_amplifier_xe_2011/lib64/libittnotify.a"

use             libunwind   v* LCG_Interfaces
# Not using the libunwind library, only the headers
macro libunwind_linkopts ''

use tcmalloc v* LCG_Interfaces -no_auto_imports

# We do not want to link GaudiGoogleProfiling to tcmalloc (it must be preloaded),
# so we need to remove the "--no-undefined" flag.
macro_remove componentshr_linkopts "-Wl,--no-undefined"

# On the other hand, we want to keep the --no-undefined for the other library.
macro_append GaudiProfiling_use_linkopts " -Wl,--no-undefined -lz " target-winxp ""

macro_append GaudiGenProfilingHtml_use_linkopts " -lz " target-winxp ""

apply_pattern disable_package_on platform=target-winxp
apply_pattern disable_package_on platform=target-i386
apply_pattern disable_package_on platform=target-i686
apply_pattern disable_package_on platform=target-slc4

apply_pattern install_more_includes more=GaudiProfiling

#------------------------------------------------------------------------------
# Create a python binary module
# -----------------------------
use Python v* LCG_Interfaces -no_auto_imports
apply_pattern pyd_boost_module module=PyCPUFamily files=python/CPUFamily.cpp
# we do not need/want to link the module against the package library
macro_remove PyCPUFamily_use_linkopts '$(GaudiProfiling_linkopts)'
#------------------------------------------------------------------------------

end_private
