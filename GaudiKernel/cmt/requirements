package GaudiKernel
version v26r0
author "LHCb Gaudi Team"

branches GaudiKernel cmt doc src

private
# genconfuser.py cannot be used in GaudiKernel
# Note: the tag must be set before including GaudiPolicy
apply_tag skip_genconfuser
end_private

use GaudiPolicy  v*
use Reflex       v*   LCG_Interfaces
use Boost        v*   LCG_Interfaces

apply_pattern install_more_includes more=GaudiKernel

#-----Linker library
library GaudiKernel  Lib/*.cpp
apply_pattern linker_library library=GaudiKernel
apply_pattern ld_library_path
apply_pattern install_scripts
apply_pattern install_python_modules

#-----Dictionary generation

apply_pattern reflex_dictionary dictionary=GaudiKernel \
                                headerfiles=$(GAUDIKERNELROOT)/dict/dictionary.h \
                                selectionfile=$(GAUDIKERNELROOT)/dict/dictionary.xml
macro GaudiKernelDict_use_linkopts $(use_linkopts)
# MCl: ensure that the headers are installed before the build of the dictionary (should not be needed)
macro_append GaudiKernelGen_dependencies "install_more_includes"

#-----Generate Configurables 
macro genconfig_cmd           $(GAUDIKERNELROOT)/$(tag)/genconf.exe \
     GAUDI_with_installarea  genconf.exe \
     GAUDIATLAS_with_installarea  genconf.exe

private

application genconf -import=Boost Util/genconf.cpp
macro_append genconflinkopts "$(GaudiKernel_linkopts) $(Boost_linkopts) $(Boost_linkopts_filesystem) $(Boost_linkopts_program_options)"
macro genconf_dependencies GaudiKernel

# FIXME: (MCl) I do not understand why genconf gets the CppUnit link options,
#        but it happens, so I have to explicitly remove them.
macro_remove genconflinkopts "$(CppUnit_linkopts)"

macro_append cppflags "" \
   Linux " -pedantic -Wwrite-strings -Wpointer-arith -Woverloaded-virtual -Wno-long-long " \
   Darwin "" \
   WIN32 ""

## For Gaudi::Sleep and Gaudi::NanoSleep
macro_append Boost_linkopts ' $(Boost_linkopts_thread) ' 

## For DirSearchPath
macro_append Boost_linkopts ' $(Boost_linkopts_system) $(Boost_linkopts_filesystem) '

application DirSearchPath_test -group=tests ../tests/src/DirSearchPath_test.cpp

use CppUnit v* LCG_Interfaces -no_auto_imports

application test_SerializeSTL -group=tests -import=CppUnit \
                       ../tests/src/test_SerializeSTL.cpp
# FIXME: (MCl) this hides warnings from a broken header file in CppUnit, but may
#              hide problems in the actual test source.
macro_append app_test_SerializeSTL_cppflags ' -Wno-unused-parameter ' WIN32 ''

apply_pattern QMTest
