<lcgdict>
  <class name    = "__gnu_cxx::dummy" />  
  <!--class pattern = "GaudiPython::Interface<*>"/-->
  <class pattern = "std::unary_function<*>"/>
  <class name    = "GaudiPython::Helper"/>

  <class name    = "std::vector<Property*>" />
  <class name    = "std::vector<const Property*>"/>
  <class name    = "std::vector<std::basic_string<char> >" rootmap="false"/>
  <class name    = "std::vector<std::vector<double> >" rootmap="false"/> 
  <class name    = "std::vector<int>" rootmap="false"/>
  <class name    = "std::vector<unsigned int>" rootmap="false"/>
  <class name    = "std::vector<double>" rootmap="false"/>
  <class name    = "std::vector<bool>" rootmap="false" />
  <class name    = "std::vector<IRegistry*>"/>
  <class name    = "std::basic_ostream<char,std::char_traits<char> >" rootmap="false"/>
  <class name    = "std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >" rootmap="false"/>
  <class name    = "std::map<std::basic_string<char>,std::basic_string<char> >"  rootmap="false"/>
  <class pattern = "std::_Bit_reference*"/>
  
  <class name    = "std::list<IAlgorithm*>"/>
  <class name    = "std::list<IService*>"/>
  <class name    = "std::list<const IFactory*>"/>
  
  <class name    = "std::allocator<IRegistry*>"/>
  <class name    = "std::allocator<IAlgorithm*>"/>
  <class name    = "std::allocator<IService*>"/>

  <class pattern = "SimpleProperty<*>"/>
  <class pattern = "SimplePropertyRef<*>"/>
  <class pattern = "BoundedVerifier<*>"/>
  <class pattern = "PropertyVerifier<*>"/>
  <class name    = "PropertyCallbackFunctor"/>

  <class name    = "GaudiHandleProperty"      />
  <class name    = "GaudiHandleArrayProperty" />
      
  <class pattern = "GaudiAlg::*"              />
  <class name    = "GaudiAlgorithm"           />
  <class name    = "GaudiHistoAlg"            />
  <class pattern = "GaudiPython::PyAlg<*>"    />
  <class name    = "GaudiTupleAlg"            />
  <class name    = "Tuples::Tuple"            />
  <class pattern = "GaudiPython::*Decorator*" />
  <class name    = "StatEntity"               />
  <class pattern = "GaudiPython::Printer<*>"  />
  <class pattern = "GaudiAlg::Print*"         />

  <class pattern = "GaudiCommon<*>"      />
  <class pattern = "GaudiHistos<*>"      />
  <class pattern = "GaudiTuples<*>"      />
  <class name    = "Gaudi::Utils::Aida2ROOT"    />

  <class name    = "Stat"                   />
  <class pattern = "Chrono*"                 />
  
  <class pattern = "Property*Functor"        />
  <class pattern = "SimpleProperty<*>"       />
  <class pattern = "SimplePropertyRef<*>"    />
  <class pattern = "PropertyWithVerifier<*>" />
  <class pattern = "PropertyWithValue<*>"> 
    <field name="m_value" transient="true"/>
  </class>
  <class pattern = "BoundedVerifier<*>"      />
  <class pattern = "PropertyVerifier<*>"     />
  
  <class pattern = "AIDA::I*"  />
  <class name    = "GaudiPython::PyAlgorithm"/>
  <class name    = "GaudiPython::CallbackStreamBuf"/>
  <class name    = "ParticleProperty"/>
  <class name    = "InterfaceID"/>

  <class name = "ITupleTool" />
  <class name = "IHistoTool" />
  
  <function name= "Gaudi::Utils::hasProperty" />
  
  <exclusion>
    <class name    = "GaudiAlg::ID::LiteralID" />
    <class pattern = "std::list<std::pair<InterfaceID,*" />
    <class pattern = "std::vector<*table_node*"          />
    <class pattern = "GaudiUtils::HashMap<*>"            />
    <class pattern = "GaudiAlg::*Map*"                   />
    <class pattern = "GaudiHistos<*>::*Map*"             />
    <class pattern = "GaudiTuples<*>::*Map*"             />
    <class pattern = "std::unary_function<std::pair<*,Tuples::*>" />
    <class pattern = "std::unary_function<std::pair<*,NTuple::*>" />
    <class pattern = "std::unary_function<std::pair<*,AIDA::*>"   />
  </exclusion>
</lcgdict>
